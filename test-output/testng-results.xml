<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="15" failed="1" total="17" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="182222" started-at="2020-09-17T09:00:46Z" finished-at="2020-09-17T09:03:49Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="182222" started-at="2020-09-17T09:00:46Z" finished-at="2020-09-17T09:03:49Z">
      <class name="tests._mvpTest">
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:tests._mvpTest@55a1c291]" name="openBrowser" is-config="true" duration-ms="16260" started-at="2020-09-17T14:30:46Z" finished-at="2020-09-17T14:31:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="login()[pri:0, instance:tests._mvpTest@55a1c291]" name="login" is-config="true" duration-ms="18177" started-at="2020-09-17T14:31:03Z" depends-on-methods="pageUtilities._base.openBrowser" finished-at="2020-09-17T14:31:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="addMarket()[pri:1, instance:tests._mvpTest@55a1c291]" name="addMarket" duration-ms="24243" started-at="2020-09-17T14:31:21Z" finished-at="2020-09-17T14:31:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMarket -->
        <test-method status="PASS" signature="createLog(org.testng.ITestResult)[pri:0, instance:tests._mvpTest@55a1c291]" name="createLog" is-config="true" duration-ms="1036" started-at="2020-09-17T14:31:45Z" finished-at="2020-09-17T14:31:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMarket status=SUCCESS method=_mvpTest.addMarket()[pri:1, instance:tests._mvpTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createLog -->
        <test-method status="FAIL" signature="marketOverview()[pri:2, instance:tests._mvpTest@55a1c291]" name="marketOverview" duration-ms="120134" started-at="2020-09-17T14:31:46Z" depends-on-methods="tests._mvpTest.addMarket" finished-at="2020-09-17T14:33:46Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to no longer be visible: By.cssSelector: div.loading (tried for 120 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CJB-LAP-138', ip: '192.168.3.158', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 79.0.3945.79, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\ALGOLI~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:55519}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 058d9cc314e8614d9e79bc0bfa9f3b9d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to no longer be visible: By.cssSelector: div.loading (tried for 120 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CJB-LAP-138', ip: '192.168.3.158', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 79.0.3945.79, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\ALGOLI~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:55519}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 058d9cc314e8614d9e79bc0bfa9f3b9d
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at pageUtilities._utils.waitForElementInVisibleByLocator(_utils.java:149)
	at pageMethods._marketOverview.<init>(_marketOverview.java:19)
	at tests._mvpTest.marketOverview(_mvpTest.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marketOverview -->
        <test-method status="PASS" signature="createLog(org.testng.ITestResult)[pri:0, instance:tests._mvpTest@55a1c291]" name="createLog" is-config="true" duration-ms="1159" started-at="2020-09-17T14:33:46Z" finished-at="2020-09-17T14:33:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=marketOverview status=FAILURE method=_mvpTest.marketOverview()[pri:2, instance:tests._mvpTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createLog -->
        <test-method status="SKIP" signature="allStores()[pri:3, instance:tests._mvpTest@55a1c291]" name="allStores" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.marketOverview" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.allStores()[pri:3, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.allStores()[pri:3, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allStores -->
        <test-method status="SKIP" signature="demographics()[pri:6, instance:tests._mvpTest@55a1c291]" name="demographics" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.allStores" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.demographics()[pri:6, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.demographics()[pri:6, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demographics -->
        <test-method status="SKIP" signature="currentInventoryAvailability()[pri:7, instance:tests._mvpTest@55a1c291]" name="currentInventoryAvailability" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.demographics" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.currentInventoryAvailability()[pri:7, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.currentInventoryAvailability()[pri:7, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currentInventoryAvailability -->
        <test-method status="SKIP" signature="inventoryAvailabilityHistory()[pri:8, instance:tests._mvpTest@55a1c291]" name="inventoryAvailabilityHistory" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.currentInventoryAvailability" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.inventoryAvailabilityHistory()[pri:8, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.inventoryAvailabilityHistory()[pri:8, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryAvailabilityHistory -->
        <test-method status="SKIP" signature="marketSpendingPower()[pri:9, instance:tests._mvpTest@55a1c291]" name="marketSpendingPower" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.inventoryAvailabilityHistory" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.marketSpendingPower()[pri:9, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.marketSpendingPower()[pri:9, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marketSpendingPower -->
        <test-method status="SKIP" signature="marketSupplyMetrics()[pri:10, instance:tests._mvpTest@55a1c291]" name="marketSupplyMetrics" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.marketSpendingPower" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.marketSupplyMetrics()[pri:10, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.marketSupplyMetrics()[pri:10, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marketSupplyMetrics -->
        <test-method status="SKIP" signature="prRatePerSqFtByStoreType()[pri:11, instance:tests._mvpTest@55a1c291]" name="prRatePerSqFtByStoreType" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.marketSupplyMetrics" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.prRatePerSqFtByStoreType()[pri:11, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.prRatePerSqFtByStoreType()[pri:11, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prRatePerSqFtByStoreType -->
        <test-method status="SKIP" signature="prRatePerSqFtByUnitType()[pri:12, instance:tests._mvpTest@55a1c291]" name="prRatePerSqFtByUnitType" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.prRatePerSqFtByStoreType" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.prRatePerSqFtByUnitType()[pri:12, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.prRatePerSqFtByUnitType()[pri:12, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prRatePerSqFtByUnitType -->
        <test-method status="SKIP" signature="prAverageUnitTypeRates()[pri:13, instance:tests._mvpTest@55a1c291]" name="prAverageUnitTypeRates" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.prRatePerSqFtByUnitType" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.prAverageUnitTypeRates()[pri:13, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.prAverageUnitTypeRates()[pri:13, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prAverageUnitTypeRates -->
        <test-method status="SKIP" signature="prRatePerSqFtHistoryGraph()[pri:14, instance:tests._mvpTest@55a1c291]" name="prRatePerSqFtHistoryGraph" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.prAverageUnitTypeRates" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.prRatePerSqFtHistoryGraph()[pri:14, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.prRatePerSqFtHistoryGraph()[pri:14, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prRatePerSqFtHistoryGraph -->
        <test-method status="SKIP" signature="prAverageRatesHistory()[pri:15, instance:tests._mvpTest@55a1c291]" name="prAverageRatesHistory" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.prRatePerSqFtHistoryGraph" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.prAverageRatesHistory()[pri:15, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.prAverageRatesHistory()[pri:15, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prAverageRatesHistory -->
        <test-method status="SKIP" signature="prRateHistoryByStore()[pri:16, instance:tests._mvpTest@55a1c291]" name="prRateHistoryByStore" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.prAverageRatesHistory" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.prRateHistoryByStore()[pri:16, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.prRateHistoryByStore()[pri:16, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prRateHistoryByStore -->
        <test-method status="SKIP" signature="prRateVolatilityHistory()[pri:17, instance:tests._mvpTest@55a1c291]" name="prRateVolatilityHistory" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.prRateHistoryByStore" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.prRateVolatilityHistory()[pri:17, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.prRateVolatilityHistory()[pri:17, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prRateVolatilityHistory -->
        <test-method status="SKIP" signature="storesInMarketStoreTypes()[pri:18, instance:tests._mvpTest@55a1c291]" name="storesInMarketStoreTypes" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.prRateVolatilityHistory" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.storesInMarketStoreTypes()[pri:18, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.storesInMarketStoreTypes()[pri:18, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storesInMarketStoreTypes -->
        <test-method status="SKIP" signature="storesInMarketUnitTypesOffered()[pri:19, instance:tests._mvpTest@55a1c291]" name="storesInMarketUnitTypesOffered" duration-ms="0" started-at="2020-09-17T14:33:48Z" depends-on-methods="tests._mvpTest.storesInMarketStoreTypes" finished-at="2020-09-17T14:33:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _mvpTest.storesInMarketUnitTypesOffered()[pri:19, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _mvpTest.storesInMarketUnitTypesOffered()[pri:19, instance:tests._mvpTest@55a1c291] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storesInMarketUnitTypesOffered -->
        <test-method status="PASS" signature="closeInstance()[pri:0, instance:tests._mvpTest@55a1c291]" name="closeInstance" is-config="true" duration-ms="855" started-at="2020-09-17T14:33:48Z" finished-at="2020-09-17T14:33:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeInstance -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests._mvpTest@55a1c291]" name="tearDown" is-config="true" duration-ms="171" started-at="2020-09-17T14:33:49Z" depends-on-methods="tests._mvpTest.closeInstance" finished-at="2020-09-17T14:33:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests._mvpTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
